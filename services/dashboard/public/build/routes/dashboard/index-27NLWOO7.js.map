{
  "version": 3,
  "sources": ["../../../../app/components/InfoCard.tsx", "../../../../app/components/Divider.tsx", "../../../../app/routes/dashboard/index.tsx", "../../../../app/components/MetricCard.tsx"],
  "sourcesContent": ["interface InfoCardProps {\n  title: string,\n  description: string,\n  link: { text: string, href: string}\n}\n\nexport default function Card({ title, description, link }: InfoCardProps) {\n  return (\n    <div className=\"flex-1\">\n      <a\n        href={link.href}\n        className=\"group flex flex-col justify-between rounded-sm bg-white p-4 shadow-xl transition-shadow hover:shadow-lg sm:p-6 lg:p-8\"\n      >\n        <div>\n          <h3 className=\"font-medium text-gray-900\">{title}</h3>\n          <div className=\"border-t-2 border-gray-100 pt-1\">\n            <p className=\"mt-1 text-sm text-gray-700\">{description}</p>\n          </div>\n        </div>\n        <div className=\"mt-4 inline-flex items-center gap-2 text-indigo-600\">\n          <p className=\"font-medium\">{link.text}</p>\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className=\"h-6 w-6 transition group-hover:translate-x-3\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2\"\n              d=\"M17 8l4 4m0 0l-4 4m4-4H3\"\n            />\n          </svg>\n        </div>\n      </a>\n    </div>\n  );\n}\n", "export default function Divider() {\n  return <div className=\"border-t border-gray-300 my-4\"></div>;\n}\n", "import InfoCard from \"~/components/InfoCard\";\nimport Divider from \"~/components/Divider\";\nimport type { InfoCardInterface, GraphCardInterface } from \"~/components/types\";\nimport GraphCard from \"~/components/GraphCard\";\nimport type { LoaderFunction } from \"@remix-run/node\";\nimport { useLoaderData } from \"react-router\";\nimport { fetch } from \"@remix-run/node\";\nimport { getActiveRooms, getAllRooms } from \"~/utils/rooms\";\nimport MetricCard from \"~/components/MetricCard\";\n\ninterface Connection {\n  timestamp: string;\n  metadata: any;\n  _id: string;\n}\n\nexport const loader: LoaderFunction = async () => {\n  const totalRooms = await getAllRooms();\n  const activeRooms = await getActiveRooms();\n\n  return {\n    totalRooms: totalRooms.length,\n    activeRooms: activeRooms.length,\n  };\n};\n\nconst Dashboard = () => {\n  const data = useLoaderData() as any;\n\n  const infoCards: InfoCardInterface[] = [\n    {\n      id: 1,\n      title: \"Concepts\",\n      description: \"Learn the concepts of Symphony before getting started\",\n      link: { text: \"Learn concepts\", href: \"#\" },\n    },\n    {\n      id: 2,\n      title: \"Get Started\",\n      description:\n        \"Learn how to auto-deploy and self-host Symphony using our CLI tool\",\n      link: { text: \"Get Started\", href: \"#\" },\n    },\n    {\n      id: 3,\n      title: \"Examples\",\n      description:\n        \"Browse and take inspiration from our galley of collaborative UI patterns\",\n      link: { text: \"Browse Examples\", href: \"#\" },\n    },\n  ];\n\n  const valueMetrics = [\n    {\n      id: 1,\n      metricName: \"Total Rooms\",\n      value: data.totalRooms,\n    },\n    {\n      id: 2,\n      metricName: \"Total Active Connections\",\n      value: 5,\n    },\n    {\n      id: 3,\n      metricName: \"Active Rooms\",\n      value: data.activeRooms,\n    },\n  ];\n\n  return (\n    <>\n      <header className=\"mb-8\">\n        <strong className=\"block font-medium text-gray-900 mb-5\">\n          {\" \"}\n          Welcome to Symphony{\" \"}\n        </strong>\n        <p className=\"mt-1 text-sm text-gray-700\">\n          Follow the steps below or browse our developer documentation to get\n          started.\n        </p>\n      </header>\n      <div className=\"flex justify-between gap-10 mb-10\">\n        {infoCards.map((card) => {\n          return (\n            <InfoCard\n              key={card.id}\n              title={card.title}\n              description={card.description}\n              link={card.link}\n            />\n          );\n        })}\n      </div>\n      <Divider />\n      <strong className=\"block font-medium text-gray-900 mb-5\">Overview</strong>\n      <div className=\"flex justify-between gap-10 mb-10\">\n        {valueMetrics.map((metric) => {\n          return (\n            <MetricCard\n              key={metric.id}\n              metricName={metric.metricName}\n              value={metric.value}\n            />\n          );\n        })}\n      </div>\n    </>\n  );\n};\n\nexport default Dashboard;\n", "interface MetricCardProps {\n  metricName: string;\n  value: number;\n}\n\nexport default function MetricCard({ metricName, value }: MetricCardProps) {\n  return (\n    <div className=\"flex-1 group flex flex-col justify-between rounded-sm bg-white p-4 shadow-xl transition-shadow sm:p-6 lg:p-8\">\n      <div className=\"mb-5\">\n        <h3 className=\"font-medium text-gray-900\">{metricName}</h3>\n        <div className=\"border-t-2 border-gray-100 pt-1\">\n          <p className=\"mt-1 text-sm text-gray-700\">Production</p>\n        </div>\n      </div>\n      <div>\n        <p className=\"text-4xl font-extrabold text-blue-600 md:text-5xl\">{ value }</p>\n        {/* <Line data={viewableData} options={options}></Line> */}\n      </div>\n    </div>\n  );\n}\n"],
  "mappings": "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",
  "names": ["import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime"]
}
